---
import { Image } from 'astro:assets'
import { getImage } from 'astro:assets'
import { MarkdownInstance } from 'astro'
import { parseBlogs, slugifyPath } from '@utils/common'
import Banner from '@components/Banner.astro'
import { BlogCard } from '@components/BlogCard'
import Clickable from '@components/Clickable.astro'
import { QuoteIcon } from '@components/Icons'
import Section from '@components/Section.astro'
import ContactUsMini from '@components/ContactUsMini.tsx'
import { Blog, Person } from '@utils/types'
import CaseStudy, { CaseStudyProps } from '@layouts/CaseStudy.astro'
import Layout from '@layouts/Layout.astro'
import { ChevronRightIcon, TickIcon } from '@components/Icons'

const threadsPicture = await getImage({
  src: import('../assets/site/threads.png'),
  width: 600,
  height: 1366,
  quality: 80,
  alt: 'threads'
}).then((img) => img.src)

const siteMetadata = await Astro.glob('../data/metadata.json')

const homepageBannerPicture = await getImage({
  src: import('../assets/site/homepage-banner.jpg'),
  width: 1700,
  quality: 90,
  alt: 'homepage banner'
}).then((img) => img.src)

const testimonials = [
  {
    name: 'MORGAN ROSS, TECHNICAL DIRECTOR, ONTHEMARKET PLC',
    quote:
      'JUXT led the development team through this period of incredible achievements.',
    bg: 'bg-red-600'
  },
  {
    name: 'MANAGING DIRECTOR, T1 INVESTMENT BANK',
    quote:
      'The JUXT team are tremendously technically capable – delivering elegant solutions to complex problems.',
    bg: 'bg-green-800'
  },
  {
    name: 'ANDY DWELLEY',
    quote: 'XTDB has been an absolute dream to use.',
    bg: 'bg-slate-800'
  },
  {
    name: 'PATRICK GALVIN',
    quote: 'XTDB has been working great for me. It is a lovely lovely project.',
    bg: 'bg-blue-800'
  },
  {
    name: 'JULIAN GAMBLE',
    quote:
      'JUXT have made a huge contribution to the Open Source and Clojure community',
    bg: 'bg-pink-800'
  },
  {
    name: 'NIC FERRIER',
    quote:
      'They are programmers employing programmers to do work with the best tools in the most interesting ways.',
    bg: 'bg-violet-800'
  },
  {
    name: "JACOB O'BRYANT",
    quote:
      'I really appreciate the straightforward simplicity of schemaless persistence. With XTDB it was just so easy.',
    bg: 'bg-gray-800'
  }
]

const clientLogos = [
  'credit-suisse.svg',
  'citi.svg',
  'vodafone.svg',
  'on-the-market.svg',
  'mail-online.svg',
  'bbc.svg',
  'klarna.svg',
  'gresham.svg'
]

const blogs = await Astro.glob<MarkdownInstance<Blog>>('./blog/{*.md,*.mdx}')

const isDev = import.meta.env.DEV

const caseStudies = await Astro.glob<CaseStudyProps>(
  '../data/case-studies/*.md'
)

const featuredCaseStudiesMetadata = siteMetadata[0].homepage.featuredCaseStudies

const featuredCaseStudies = featuredCaseStudiesMetadata.map((slug) => {
  return caseStudies.find((caseStudy) => slugifyPath(caseStudy.file) === slug)
})

const people = await Astro.glob<MarkdownInstance<Person>>(
  '../data/people/{*.mdx,*.md}'
)

const peopleByCode = new Map(
  people.map((person) => [person.frontmatter.code, person.frontmatter])
)

const featuredBlogsMetadata = siteMetadata[0].homepage.featuredBlogs

const filteredBlogs = featuredBlogsMetadata.map((slug) => {
  return blogs.find((blog) => slugifyPath(blog.url) === slug)
})

const heroAuthorImports = {
  heroImageImport: (heroImage) => import(`../assets/blog/${heroImage}.jpg`),
  authorImageImport: (authorImage) =>
    import(`../assets/people/${authorImage}.jpg`)
}

const featuredBlogs = await parseBlogs({
  rawBlogs: filteredBlogs,
  rawPeople: people,
  isDev: isDev,
  getImage,
  ...heroAuthorImports
})
---

<Layout title='JUXT' navbar navbarNoBg>
  <main>
    <Banner
      navbarNoBg
      text='Scaling Simplicity'
      style={{
        backgroundImage: `url(${homepageBannerPicture})`
      }}
    />
    <div class='bg-black flex flex-wrap justify-center border-gray-800'>
      {
        clientLogos.map((logo) => (
          <img
            src={`/images/client-logos/${logo}`}
            alt=''
            class='w-25 h-20 md:w-35 md:h-30'
          />
        ))
      }
    </div>
    <Section className='bg-yellow-600 py-12 text-white'>
      <h2 class='pb-4 text-3xl md:text-4xl'>
        Complexity limits your organization’s potential
      </h2>
      <p class='text-xl md:text-2xl font-extralight'>
        For over a decade, we’ve built high-quality, scalable, and resilient
        software systems for the world's largest companies, without fail.
      </p>
    </Section>

    <Section
      className={'bg-gradient-to-b from-black to bg-gray-600 bg-[length:0px_0px] md:bg-no-repeat md:bg-right md:bg-contain py-20 text-white'}
    >
      <div class='md:w-1/2'>
        <h2 class='text-4xl lg:text-5xl pb-10 font-bold'>Our Approach</h2>
        <div class='text-lg font-extralight flex flex-col gap-8'>
          <p class=''>
            The fundamental concerns in IT systems are
            <span class='font-bold text-juxt'>time</span>,
            <span class='font-bold text-juxt'>data</span>,
            <span class='font-bold text-juxt'>form</span>, and
            <span class='font-bold text-juxt'>code</span>
              — their subtle interactions and couplings combine to have a
            suffocating impact on software projects.
          </p>
          <p class=''>
            Our approach to building IT systems is defined by a unique
            methodology and a set of supporting tools that allow us to keep
            these four concerns separate, resulting in:
          </p>
          <div class='flex flex-col gap-6'>
            <div class='flex gap-4 items-center'>
              <div class='bg-gray-800 w-6 h-6 shrink-0 border border-juxt'>
                <TickIcon className={'fill-white'} />
              </div>
              <p>Rapid development of large IT systems</p>
            </div>

            <div class='flex gap-4 items-center'>
              <div class='bg-gray-800 w-6 h-6 shrink-0 border border-juxt'>
                <TickIcon className={'fill-white'} />
              </div>
              <p>Increased levels of agility and software re-use</p>
            </div>
            <div class='flex gap-4 items-center'>
              <div class='bg-gray-800 w-6 h-6 shrink-0 border border-juxt'>
                <TickIcon className={'fill-white'} />
              </div>
              <p>Lower maintenance costs</p>
            </div>
            <div class='flex gap-4 items-center'>
              <div class='bg-gray-800 w-6 h-6 shrink-0 border border-juxt'>
                <TickIcon className={'fill-white'} />
              </div>
              <p>Secure, reliable systems that are robust yet flexible</p>
            </div>
          </div>
        </div>
      </div>
      <div class='flex justify-between flex-col lg:flex-row'>
        <div class='lg:w-1/2'>
          <h2 class='text-2xl lg:text-3xl font-semibold pt-20 pb-10'>Time</h2>
          <div class='font-extralight flex flex-col gap-6'>
            <p class=''>
              We believe that systems should be built on the conceptual bedrock
              of a dual timeline. This provides a universal set of essential
              capabilities for organizations who operate within disparate and
              ever-evolving landscapes of information, and who require an
              accurate and consistent view of information at any point:
              <span class='italic'>past</span>,
              <span class='italic'>present</span> and
              <span class='italic'>future</span>.
            </p>
            <p>The main timeline is fully controllable and it allows for:</p>
            <div>
              <div class='flex items-center'>
                <div class='w-8 h-8 shrink-0'>
                  <ChevronRightIcon className={'fill-white'} />
                </div>
                <p>Historical corrections</p>
              </div>
              <div class='flex items-center'>
                <div class='w-8 h-8 shrink-0'>
                  <ChevronRightIcon className={'fill-white'} />
                </div>
                <p>The integration of imported records</p>
              </div>
              <div class='flex items-center'>
                <div class='w-8 h-8 shrink-0'>
                  <ChevronRightIcon className={'fill-white'} />
                </div>
                <p>The previewable orchestration of future states</p>
              </div>
            </div>
            <p>
              The secondary timeline is immutable and provides a guaranteed
              audit trail, 'built-in'.
            </p>
          </div>
        </div>
        <div
          class='lg:w-1/2 lg:self-center flex justify-center lg:justify-end overflow-hidden'
        >
          <Image
            alt='image'
            width={500}
            quality={80}
            class='sm:w-4/5 lg:w-11/12 animate-[spin_100s_linear_infinite]'
            src={import('../assets/site/sphere-time.png')}
          />
        </div>
      </div>
      <div class='flex justify-between flex-col-reverse lg:flex-row text-white'>
        <div
          class='lg:w-1/2 lg:self-center flex justify-center lg:justify-start overflow-hidden'
        >
          <Image
            alt='image'
            width={500}
            quality={80}
            class='sm:w-4/5 lg:w-11/12 animate-[spin_100s_linear_infinite]'
            src={import('../assets/site/sphere-data.png')}
          />
        </div>
        <div class='lg:w-1/2'>
          <h2 class='text-2xl lg:text-3xl font-semibold py-10'>Data</h2>
          <div class='font-extralight flex flex-col gap-6'>
            <p>
              Data is fundamental to the creation of software. It will routinely
              outlive the interpretations we derive from it and the applications
              we build on top of it. Therefore, we will always seek to lay the
              foundations of data management independently of a particular
              application or use-case, and above a
              <span class='italic'>common timeline</span>.
            </p>
            <p>
              Table-based structures, found in spreadsheets and traditional SQL
              databases, are helpful for displaying and analyzing data, but they
              are not an appropriate format for storing data.
            </p>
            <p>
              Tables are insufficient for representing data in its purest form,
              and this is particularly obvious when modeling sparse data or
              multi-valued attributes, or coping with the evolution of data over
              time.
            </p>
            <p>
              Instead, we believe that data is best recorded as units of facts
              and relationships, without constraints.
            </p>
            <p>
              Simply put, we believe graph-oriented systems point us towards the
              correct approach for data management, and organizations, such as
              <span class='font-bold text-juxt'>Facebook</span> and
              <span class='font-bold text-juxt'>Google</span> have proved how
              powerful the widespread use of graph-structured data can be.
            </p>
          </div>
        </div>
      </div>
      <div class='flex justify-between flex-col lg:flex-row'>
        <div class='lg:w-1/2'>
          <h2 class='text-2xl lg:text-3xl font-semibold py-10'>Form</h2>
          <div class='font-extralight flex flex-col gap-6'>
            <p>
              Organizations can unlock different amounts of value from data
              depending on how they interpret it, how they shape it and the
              constraints they place on it.
            </p>
            <p>
              Complex
              <span class='italic'>
                types & tables, schemas & structures, classes & containers,
                models & metadata, formats & encodings, representations.
              </span>
            </p>
            <p>
              These are the <span class='font-bold text-juxt'>forms</span> we
              construct for interpreting, analyzing and extracting value from
              our data. Tools such as relational schemas and ontologies are
              common structures we use for understanding, analyzing and managing
              our information.
            </p>
            <p>
              Too often, software developers will attempt to "codify" these
              structures into their software as types and objects.
            </p>
            <p>
              By understanding that schema is just another form of data, on a
              timeline, we let our information systems grow and flex with the
              businesses they serve. This is how we are able to build
              maintainable models of the real world.
            </p>
          </div>
        </div>
        <div
          class='lg:w-1/2 lg:self-center flex justify-center lg:justify-end overflow-hidden'
        >
          <Image
            alt='image'
            width={500}
            quality={80}
            class='sm:w-4/5 lg:w-11/12 animate-[spin_100s_linear_infinite]'
            src={import('../assets/site/sphere-form.png')}
          />
        </div>
      </div>
      <div class='flex justify-between flex-col-reverse lg:flex-row text-white'>
        <div
          class='lg:w-1/2 lg:self-center flex justify-center lg:justify-start relative overflow-hidden'
        >
          <Image
            alt='image'
            width={500}
            quality={80}
            class='sm:w-4/5 lg:w-10/12 animate-[spin_100s_linear_infinite]'
            src={import('../assets/site/sphere-code.png')}
          />
          <Image
            alt='image'
            width={500}
            quality={80}
            class='sm:w-4/5 lg:w-10/12 absolute top-0 left-1/2 lg:left-0 transform lg:translate-x-0 -translate-x-1/2'
            src={import('../assets/site/sphere-form.png')}
          />
        </div>
        <div class='lg:w-1/2 pb-16'>
          <h2 class='text-2xl lg:text-3xl font-semibold py-10'>Code</h2>
          <div class='font-extralight flex flex-col gap-6'>
            <p>
              The software <span class='italic'>patterns</span> and
              <span class='italic'>practices</span> that underlie your
              application architecture are certainly important, but less
              fundamentally relevant than making the correct choices with
              regards to the structure of your data in time. Assuming those
              other foundations are in place, we believe that the best approach
              to code is to keep it
              <span class='italic'>short, readable</span> and
              <span class='italic'>expressive</span>.
            </p>
            <p>In reality this means we prefer:</p>
            <div>
              <div class='flex items-center'>
                <div class='w-8 h-8 shrink-0'>
                  <ChevronRightIcon className={'fill-white'} />
                </div>
                <p>
                  Writing modular & generic libraries of functions that operate
                  over many types of data structures
                </p>
              </div>
              <div class='flex items-center'>
                <div class='w-8 h-8 shrink-0'>
                  <ChevronRightIcon className={'fill-white'} />
                </div>
                <p>Minimizing the use of state wherever possible</p>
              </div>
              <div class='flex items-center'>
                <div class='w-8 h-8 shrink-0'>
                  <ChevronRightIcon className={'fill-white'} />
                </div>
                <p>
                  Maintaining declarative structures that avoid the need for
                  reasoning about imperative control flows
                </p>
              </div>
            </div>
            <p>
              By pulling out the state and domain, the remaining code is simple.
              Developers can focus on writing code to implement business
              <span class='italic'>logic</span>, pure functional
              <span class='italic'>calculations</span> and
              <span class='italic'>derivations</span>, with resulting
              <span class='italic'>actions</span> that automate the execution of
              business processes.
            </p>
            <p>As software complexity is tamed, productivity soars.</p>
          </div>
        </div>
      </div>
    </Section>

    <Section className='text-black py-20 md:py-40 bg-gray-100'>
      <ContactUsMini client:only />
    </Section>
  </main>
</Layout>
