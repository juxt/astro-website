---
// 1. Source profile data from your profile file
import * as myData from '../../data/people/mal.md'

// 2. Extract the fields you are planning to use in your profile page.
// NOTE: This won't error if properties are missing
const { code, jobTitle, fullName } = myData.frontmatter;

// 3. Import any components you need
import { getImage, Image } from 'astro:assets'
import ProfilePage from '@components/team/ProfilePage.astro'

import Section from '@components/team/Section.astro'
import TwoColumnSection from '@components/team/TwoColumnSection.astro'
import GreetingSection from '@components/team/GreetingSection.astro'
import QuoteSection from '@components/team/QuoteSection.astro'
import LatestBlogsSection from '@components/team/LatestBlogsSection.astro'
import ResourceCollectionSection from '@components/team/ResourceCollectionSection.astro'
import GitHubRepositoriesSection from '@components/team/GitHubRepositoriesSection.astro'
import GitHubRepositoryItem from '@components/team/GitHubRepositoryItem.astro'
import ContactSection from '@components/team/ContactSection.astro'
import ResourceItem from '@components/team/ResourceItem.astro'
import SmallTitle from '@components/team/SmallTitle.astro'
import SimpleColumn from '@components/team/SimpleColumn.astro'
import FeatureSection from '@components/team/FeatureSection.astro'
import FeatureText from '@components/team/FeatureText.astro'
import FeatureYouTube from '@components/team/FeatureYouTube.astro'
import GallerySection from '@components/team/GallerySection.astro'
import GalleryImage from '@components/team/GalleryImage.astro'
import MeetOtherExecs from '@components/team/MeetOtherExecs.astro'

---
<ProfilePage title={fullName + " - " + jobTitle}>
  <GreetingSection {...myData.frontmatter}>
    <Fragment slot="expert-in">
      <li>Systems Architecture</li>
      <li>Web Standards</li>
      <li>API Security</li>
      <li>Databases</li>
    </Fragment>
    <Fragment slot="bio">
      As JUXT's CTO, I lead technological innovation and strategy, drawing upon over three decades of experience in tech leadership and software development, which spanned pivotal roles, including 5 years as Vice President at Deutsche Bank where I managed critical financial systems.
    </Fragment>
  </GreetingSection>

  <FeatureSection flip={true}>

    <FeatureText
      title="Building A Secure API Platform: A Data-driven Approach"
      subtitle="Malcolm's Talk @ Nordic APIs Platform Summit, Stockholm 2023"
      bgColor="yellow">

      <SimpleColumn>
        <p>
          API development is hard, especially if we need to add security. There are so many things to worry about!
        </p>

        <p>
          We know we can specify an API as an OpenAPI document. But how far can we extend this data-driven approach? Can we implement security, durability, behaviour? This talk will attempt to answer some of these questions, in part, by delving into the design of Site, an open-source API-platform I have been helping to build. I will explain the advantages of a ‘data-first’ mindset in the development and evolution of APIs, and how we can begin to make the development and deployments of secure APIs a little easier.
        </p>
      </SimpleColumn>
    </FeatureText>

    <FeatureYouTube slot="image"
      title="Building A Secure API Platform: A Data-driven Approach"
      embedUrl="https://www.youtube.com/embed/7qZ-GWvx6lM"
    />

  </FeatureSection>

  <FeatureSection>

    <FeatureText
      title="Atomic Architecture — An Architectural Vision for Better Information Systems"
      subtitle="Malcolm's on-demand webinar, October 2023"
      bgColor="yellow">

      <SimpleColumn>
        <p>
          As part of our drive to design better data systems for our customers, we’ve identified seven architectural principles that yield exceptional results.
        </p>
        <p>
          In this webinar, I explained the principles behind Atomic Architecture, an architectural blueprint for building reliable information systems.
        </p>
        <p>
          My viewpoint is that current trends in software architecture create unnecessary complexity, delivering poor outcomes for users.
          Atom Architecture incorporates key ideas and principles from Functional Programming, Domain Driven Design, Event Driven Architecture, Data Mesh and more.
        </p>
      </SimpleColumn>
    </FeatureText>

    <FeatureYouTube slot="image"
      title="Clojure on SCIs"
      embedUrl="https://www.youtube.com/embed/sf3QZ-HBNFk"
    />

  </FeatureSection>

  <MeetOtherExecs {...myData.frontmatter} />

  <ContactSection {...myData.frontmatter} />

  <!--
  <QuoteSection author="Albert Einstein">
    God does not play dice with the Universe
  </QuoteSection>
  -->

  <!--
  <ResourceCollectionSection title="Notable Talks" subtitle="A selection of Malcolm's online talks">

    <ResourceItem
      name="Building A Secure API Platform: A Data-driven Approach"
      description="A talk I gave in October 2023 at the Nordic APIs Platform Summit in Stockholm"
      link="https://www.youtube.com/watch?v=7qZ-GWvx6lM"
    />

    <ResourceItem
      name="Clojure on SCIs"
      description="The opening keynote I gave at Babashka Conf in June 2023"
      link="https://www.youtube.com/watch?v=Cq4S7nO1KOo"
    />

    <ResourceItem
      name="The Universe As A Value"
      description="A talk given at ClojuTRE 2016"
      link="https://www.youtube.com/watch?v=odPAkEO2uPQ"
    />

  </ResourceCollectionSection>
  -->

  <LatestBlogsSection bgColor="yellow" title="Malcolm's Recent Blogs and Articles" {...myData.frontmatter} />

  <GitHubRepositoriesSection bgColor="orange"
                             title="Github Repositories Malcolm contributes to"
                             {...myData.frontmatter} >
    <GitHubRepositoryItem owner ="juxt-site" name="site" description="A platform for building stateful API services." />
    <GitHubRepositoryItem owner="juxt" name="pick" description="A Clojure library for HTTP server-driven content negotiation." />
    <GitHubRepositoryItem owner="juxt" name="reap" description="A Clojure library for decoding and encoding strings used by web protocols." />
    <GitHubRepositoryItem owner="juxt" name="grab" description="A Clojure library for parsing and executing GraphQL queries. " />
    <GitHubRepositoryItem owner="juxt" name="jinx" description="jinx is not xml-schema (it's json-schema!)" />
    <GitHubRepositoryItem owner="juxt" name="bidi" description="Bidirectional URI routing" />
  </GitHubRepositoriesSection>
</ProfilePage>
