---
import { getImage } from 'astro:assets'
import { MarkdownInstance } from 'astro'
import { parseBlogs } from '@utils/common'
import Banner from '@components/Banner.astro'
import { Blog, Person } from '@utils/types'
import { BlogIndex } from '@layouts/BlogIndex.tsx'
import { BlogCard } from '@components/BlogCard'
import Layout from '@layouts/Layout.astro'

const isDev = import.meta.env.DEV;

const authorImageImport = {
  heroImageImport: (heroImage) => import(`../../assets/blog/${heroImage}.jpg`),
  authorImageImport: (authorImage) => import(`../../assets/people/${authorImage}.jpg`)
}

const unfilteredBlogs = await parseBlogs({
  rawBlogs: await Astro.glob<MarkdownInstance<Blog>>('/src/pages/blog/{*.mdx,*.md}'),
  rawPeople: await Astro.glob<MarkdownInstance<Person>>('/src/data/people/{*.mdx,*.md}'),
  isDev: isDev,
  getImage,
  ...authorImageImport
});
const blogs = unfilteredBlogs.sort((a, b) => new Date(b.publishedDate) - new Date(a.publishedDate));

const blogBannerPicture = await getImage({
  src: import('../../assets/site/blog-banner.jpeg'),
  width: 1700,
  quality: 90,
  alt: 'blog banner'
}).then((img) => img.src)
---

<Layout navbar title='Blog'>
  <div class='bg-gray-900 mt-10 flex flex-col items-center relative'>
    <Banner
      text='Blog'
      style={{ backgroundImage: `url(${blogBannerPicture})` }}
    />
    <div class="my-10 flex flex-col items-center gap-10">
      { import.meta.env.PROD && <BlogIndex client:only='preact' /> }
      {
        // The reason for this is that pagefind requires the fully built, static site to build it's indexes
        !import.meta.env.PROD &&
        <>
          <div class="text-white">Search disabled on dev builds</div>
          { /* Set dark mode for BlogCard */ }
          <div class="dark grid md:grid-cols-[repeat(2,_24rem)] xl:grid-cols-[repeat(3,_24rem)] justify-center gap-10">
            {
              blogs.slice(0, 9).map(blog => <BlogCard {...blog}/>)
            }
          </div>
        </>
      }
    </div>
  </div>
</Layout>
