---
import type {
  RadarConfig,
  RadarEntry,
  RadarQuadrant,
  RadarRing,
  RadarColors
} from '../utils/radar-generation'

interface Props {
  data: {
    title?: string
    quadrants: Array<{ name: string }>
    rings: Array<{ name: string; color: string }>
    entries: Array<{
      label: string
      quadrant: number
      ring: number
      moved?: number
      url?: string
      active?: boolean
      description?: string
    }>
  }
  scale?: number
  colors?: {
    background: string
    grid: string
    inactive: string
  }
  fontFamily?: string
  printLayout?: boolean
  linksInNewTabs?: boolean
}

const {
  data,
  scale = 1.0,
  colors = {
    background: 'transparent',
    grid: '#bbb',
    inactive: '#ddd'
  },
  fontFamily = 'Arial, Helvetica',
  printLayout = true,
  linksInNewTabs = true
} = Astro.props

// Prepare radar configuration
const radarConfig = {
  repo_url: 'https://github.com/juxt/astro-website',
  svg_id: 'radar',
  scale,
  colors,
  font_family: fontFamily,
  title: data.title,
  quadrants: data.quadrants,
  rings: data.rings,
  print_layout: printLayout,
  links_in_new_tabs: linksInNewTabs,
  entries: data.entries
}
---

<div class='w-11/12 mx-auto overflow-hidden flex justify-center items-center'>
  <svg
    viewBox='0 0 1450 1000'
    id='radar'
    class='block max-w-full dark:fill-white'></svg>
</div>

<script>
  import { radar_visualization } from '../utils/radar-generation'

  // Get the radar config from the component
  const radarConfig = JSON.parse(
    document.getElementById('radar-config')?.textContent || '{}'
  )

  // Initialize the radar visualization
  document.addEventListener('DOMContentLoaded', function () {
    try {
      const config = {
        ...radarConfig
      }

      radar_visualization(config)
    } catch (error) {
      console.error('Failed to load radar visualization:', error)
    }
  })
</script>

<script
  id='radar-config'
  type='application/json'
  set:html={JSON.stringify(radarConfig)}
/>
